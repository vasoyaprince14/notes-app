<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Note</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script>
    function updateNote(event) {
      event.preventDefault(); 

      const formData = new FormData(event.target); 
      const title = formData.get('title');
      const content = formData.get('content');
      const token = localStorage.getItem('x-auth-token'); 
      const noteId = '<%= note._id %>';

      // Display confirmation dialog
      if (!confirm(`Are you sure you want to update this note?\nTitle: ${title}\nContent: ${content}`)) {
        return; // Cancel if user doesn't confirm
      }

      // Fetch request to update the note
      fetch(`/api/notes/${noteId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'x-auth-token': token
        },
        body: JSON.stringify({ title, content }) 
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to update note');
        }
        return response.json();
      })
      .then(data => {
        if (data._id) {
          showSuccessMessage('Note updated successfully');
          setTimeout(() => {
            window.location.href = '/notes';
          }, 1000); // Redirect after 1 second
        } else {
          throw new Error(data.msg || 'Failed to update note');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showModal(error.message || 'An error occurred while updating the note. Please try again.');
      });
    }

    function showSuccessMessage(message) {
      const successMessage = document.getElementById('success-message');
      successMessage.textContent = message;
      successMessage.classList.remove('hidden');
    }

    function showModal(message) {
      const modal = document.getElementById('confirm-modal');
      const modalMessage = document.getElementById('modal-message');
      modalMessage.textContent = message;
      modal.classList.remove('hidden');
    }

    function closeModal() {
      const modal = document.getElementById('confirm-modal');
      modal.classList.add('hidden');
    }

    function goBack() {
      window.location.href = '/notes';
    }

    function confirmNavigation(event) {
      const formData = new FormData(document.querySelector('form'));
      const originalTitle = '<%= note.title %>';
      const originalContent = '<%= note.content %>';
      const currentTitle = formData.get('title');
      const currentContent = formData.get('content');

      // Check if the user has made changes to the form
      if (currentTitle !== originalTitle || currentContent !== originalContent) {
        const confirmationMessage = 'You have unsaved changes. Do you really want to leave?';
        
        // If the user confirms, allow the navigation
        if (!confirm(confirmationMessage)) {
          event.preventDefault(); 
          event.returnValue = ''; 
        }
      }
    }

    window.addEventListener('beforeunload', confirmNavigation);
  </script>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
    <h2 class="text-2xl font-bold mb-6 text-center text-gray-800">Edit Note</h2>
    <button onclick="goBack()" class="text-gray-600 hover:text-gray-800 focus:outline-none mb-4">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline-block mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
      </svg>
      Back
    </button>
    <form onsubmit="updateNote(event)" class="space-y-4 mt-4">
      <div>
        <label class="block text-gray-700">Title:</label>
        <input type="text" name="title" value="<%= note.title %>" required class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent">
      </div>
      <div>
        <label class="block text-gray-700">Content:</label>
        <textarea name="content" required class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent"><%= note.content %></textarea>
      </div>
      <button type="submit" class="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50">Update</button>
      <div id="success-message" class="text-green-600 mt-2 hidden"></div>
    </form>
  </div>

  <!-- Confirmation Modal -->
  <div id="confirm-modal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white p-4 rounded-lg shadow-lg">
      <p id="modal-message" class="text-gray-800"></p>
      <div class="flex justify-end mt-4">
        <button onclick="closeModal()" class="mr-2 bg-gray-300 text-gray-800 px-4 py-2 rounded-lg">Cancel</button>
        <button onclick="closeModal()" class="bg-blue-500 text-white px-4 py-2 rounded-lg">OK</button>
      </div>
    </div>
  </div>
</body>
</html>
